@startuml
class Duck{
  FlyBehavior flyBehavior
  QuackBehavior quackBehavior
  void swim()
  {abstract} void display()
  void performFly()
  void preformQuack()
  void setFlyBehavior(FlyBehavior)
  void setQuackBehavior(QuackBehavior)
}
class MallardDuck{
  void diplay()
}
class ReadheadDuck{
  void diplay()
}
class RubberDuck{
  void diplay()
}
class DecoyDuck{
  void diplay()
}

interface FlyBehavior{
  void fly()
}
class FlyWithWings{
  void fly()
}
class FlyNoWay{
  void fly()
}

interface QuackBehavior{
  void quack()
}
class Quack{
  void quack()
}
class Squeak{
  void quack()
}
class MuteQuack{
  void quack()
}
Duck <|-- MallardDuck
Duck <|-- ReadheadDuck
Duck <|-- RubberDuck
Duck <|-- DecoyDuck

FlyBehavior <|.. FlyWithWings
FlyBehavior <|.. FlyNoWay

QuackBehavior <|.. Quack
QuackBehavior <|.. Squeak
QuackBehavior <|.. MuteQuack

Duck --* FlyBehavior
Duck --* QuackBehavior
@enduml